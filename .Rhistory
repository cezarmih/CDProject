features <- read.csv("features.txt", sep = " ", header= FALSE)
activity_labels <- read.csv("activity_labels.txt", sep = " ", header= FALSE)
head(activity_labels)
head(subject_test)
nrow(subject_test)
nrow(y_test)
?head
head(y_test,1)
head(y_test,10)
head(y_test)
head(y_subject)
head(subject_test
)
testas <- cbind(y_test, subject_test)
head testas
head(testas)
colnames(testas) <- c("Activity", "Subject")
head(testas)
trainas <- cbind(y_train, subject_train)
colnames(trainas) <- c("Activity", "Subject")
head(trainas)
ncol(testas)
nrow(testas)
nrow(trainas)
nrow(merge(testas, trainas))
?rbind
rbind(teatas, trainas)
rbind(testas, trainas)
as <- rbind(testas, trainas)
head(as)
nrow(as)
as <- rbind(trainas, testas)
heas(as)
nrow(as)
as <- rbind(trainas, testas)
head(as)
nrow(as)
x <- rbind(x_train, x_test)
ncol(x)
nrow(x)
ncol(x_test)
ncol(x_train)
x_test <- read.csv("test/X_test.txt", sep = " ", header= FALSE)
x_train <- read.csv("train/X_train.txt", sep = " ", header= FALSE)
y_test <- read.csv("test/y_test.txt", sep = " ", header= FALSE)
y_train <- read.csv("train/y_train.txt", sep = " ", header= FALSE)
subject_test <- read.csv("test/subject_test.txt", sep = " ", header= FALSE)
subject_train <- read.csv("train/subject_train.txt", sep = " ", header= FALSE)
features <- read.csv("features.txt", sep = " ", header= FALSE)
activity_labels <- read.csv("activity_labels.txt", sep = " ", header= FALSE)
##2. Column bind Dataframes y_test and subject_test and add column names Activity and Subject to it. ->testas
testas <- cbind(y_test, subject_test)
colnames(testas) <- c("Activity", "Subject")
##3. Column bind Dataframes y_train and subject_train and add column names Activity and Subject to it. ->trainas
trainas <- cbind(y_train, subject_train)
colnames(trainas) <- c("Activity", "Subject")
##4. Merge (rbind) trainas and testas (dim == 10299*2) -> as
as <- rbind(trainas, testas)
head(as)
nrow(as)
##5. Merge (rbind) x_train and x_test data (dim == 10299*561) -> x
x <- rbind(x_train, x_test)
ncol(x)
nrow(x)
ncol(x_test)
ncol(x_train)
x_test<-read.table("test/X_test.txt", header=FALSE,sep="")
ncol(x_test)
x_train<-read.table("train/X_train.txt", header=FALSE,sep="")
ncol(x_train)
x <- rbind(x_train, x_test)
ncol(x)
nrow(x)
head(features)
head(features[,2])
nrow(features)
colnames(x) <- features[,2]
head(x.1)
head(x,11)
?cdata
colnames(x) <- features[,2]
x$
toMatch <- c(".*mean\\(\\).*-x$", ".*std\\(\\).*-x$")
toMatch
toMatch <- c(".*mean\\(\\).*-x$", ".*std\\(\\).*-x$")
matches <- unique (grep(paste(toMatch,collapse="|"),
colnames(x), value=TRUE))
matches
colnames(x)
matches <- unique (grep(paste(toMatch,collapse="|"),
colnames(x), value=TRUE))
matches
matches <- unique (grep(paste(toMatch,collapse="|"),
features$V2, value=TRUE))
matches
toMatch <- c(".*mean\\(\\).*-X$", ".*std\\(\\).*-X$")
matches <- unique (grep(paste(toMatch,collapse="|"),
features$V2, value=TRUE))
matches
matches <- unique (grep(paste(toMatch,collapse="|"),
colnames(x), value=TRUE))
matches
head(x[,matches])
cdata <- x[,matches]
nrow(cdata)
ncol(cdata)
cdata <- cbind(as, cdata)
head(cdata)
ncol(cdata)
nrow(cdata)
toMatch <- c(".*mean\\(\\).*", ".*std\\(\\).*")
matches <- unique (grep(paste(toMatch,collapse="|"), colnames(x), value=TRUE))
cdata <- x[,matches]
ncol(cdata)
cdata <- cbind(as, cdata)
ncol(cdata)
nrow(cdata)
colnames(cdata)
labels <- activity_labels[, 2]
lables
labels
class(labels)
labels <- as.vector(activity_labels[,2])
labels <- as.vector(activity_labels[,2])
labels
?factor
cdata$Activity <- factor(cdata$Activity, labels)
head(cdata$Activity)
library("knitr", lib.loc="C:/Users/cmihaila/R/win-library/3.0")
?group
?aggregate
aggr <- aggregate(. ~ Activity + Subject, cdata, mean)
aggr <- aggregate(cdata[,3:68] ~ Activity + Subject, cdata, mean)
aggr <- aggregate(cdata[,3:68] ~ Activity + Subject, cdata, list)
aggr <- aggregate(. ~ Activity + Subject, cdata, list)
?lapply
library("reshape2", lib.loc="C:/Users/cmihaila/R/win-library/3.0")
mdata <- melt(cData, id = c("Subject", 'Activity'))
library("reshape2")
install.packages("plyr")
library("reshape2")
library("reshape2")
mdata <- melt(cData, id = c("Subject", 'Activity'))
mdata <- melt(cdata, id = c("Subject", 'Activity')) #requires "reshape2" package
View(mdata)
?dcast
data(french_fries)
ffm <- melt(french_fries, id = 1:4, na.rm = TRUE)
ffm
head(ffm)
dcast(ffm, treatment ~ .)
dcast(ffm, treatment ~ .,  average)
dcast(ffm, treatment ~ .,  avg)
dcast(ffm, treatment ~ .,  mean)
dcast(ffm, . ~ treatment,  mean)
mdata <- melt(cdata, id = c("Subject", 'Activity'), na.rm = TRUE) #requires "reshape2" package
ddata <- dcast(mdata, . ~ Subject + Activity, na.rm = TRUE)
ddata <- dcast(mdata, . ~ c(Subject, Activity), na.rm = TRUE)
ddata <- dcast(mdata, Subject + Activity ~ ., na.rm = TRUE)
?data.table
install.packages("data.table")
library("data.table")
?data.table
DT?
?DT
?DT
help(DT)
DF = data.frame(x=rep(c("a","b","c"),each=3), y=c(1,3,6), v=1:9)
DT = data.table(x=rep(c("a","b","c"),each=3), y=c(1,3,6), v=1:9)
DF
DT
DT[, lapply(.DT,mean), by=list("col1,col2,col3,..."x")]
DT[, lapply(.DT,mean), by=list("x")]
DT[, lapply(DT[,2:3],mean), by=list("x")]
DT[, lapply(DT[,2:3],mean), by=list(x)]
mdata <- DT[, lapply(DT[,3:68], mean), by = list(Subject, Activity)]
mdata <- DT[, lapply(cdata[,3:68], mean), by = list(Subject, Activity)]
colnames(cdata)
mdata <- DT[, lapply(cdata[,3:68], mean), by = list("Subject", "Activity")]
mdata <- cdata[, lapply(cdata[,3:68], mean), by = list(Subject, Activity)]
DT[, lapply(DT[,2:3],mean), by=list(x)]
mdata <- cdata[, lapply(cdata[,3:68], mean), by = c("Subject", "Activity")]
mdata <- cdata[, lapply(cdata[,3:68], mean), by = c("Activity", "Subject")]
cdata[, lapply(cdata[,3:68], mean), by = c("Activity", "Subject")]
mdata <- cdata[, lapply(cdata[,3:68], mean), by=colnames(cdata)[1:2]]
class(DT)
class(cdata)
class x_test
class(x_test)
dtdata <- data.table(cdata)
?dim
dim(cdata)
dim(dtdata)
mdata <- dtdata[, lapply(dtdata[,3:68], mean), by=colnames(dtdata)[1:2]]
mdata <- dtdata[, lapply(dtdata[,3:68], mean), by=eval(colnames(dtdata)[1:2])]
dim(mdata)
mdata
dtdata <- data.table(cdata, keep.colnames = TRUE)
head(dtdata)
mdata <- dtdata[, lapply(dtdata[,3:68], mean), by=eval(colnames(dtdata)[1:2])]
mdata
colnames(mdata)
colnames(cdate)
dtdata <- data.table(cdata, keep.colnames = TRUE)
mdata <- dtdata[, lapply(dtdata[,3:68], mean), by=eval(colnames(dtdata)[1:2])]
colnames(mdata)
colnames(cdata)
colnames(mdata) <- colnames(cdata)
colnames(mdata)
head(mdata)
dim(mdata)
mdata
head(mdata)
?data.table
dtdata <- data.table(cdata, keep.colnames = TRUE)
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=eval(colnames(dtdata)[1:2])]
colnames(mdata) <- colnames(cdata)
dim(mdata)
head(mdata)
dim(mdata)
tail(mdata)
by=eval(colnames(dtdata)[1:2])
eval(colnames(dtdata)[1:2])
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=colnames(dtdata)[1:2]]
colnames(mdata)
list(colnames(dtdata)[1:2])
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=list(colnames(dtdata)[1:2])]
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=list(Subject, Activity)]
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=list(Subject, Activity)]
dim(mdata)
list(Subject, Activity)
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=list("Subject", "Activity")]
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=list("Subject", "Activity")]
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=Subject,Activity]
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=Subject,Activity]
mdata <- dtdata[, lapply(dtdata[,3:68], mean, rm.na = TRUE), by=Subject]
dim(mdata)
head(mdata)
tail(mdata)
mdata <- dtdata[,mean(dtdata[,3:68]), by = Subject]
dim(mdata)
DT[,sum(v),by=x]
mdata <- dtdata[, lapply(dtdata[,3:68], mean(x[!is.na(x)]), by=Subject]
mdata <- dtdata[, lapply(dtdata[,3:68], mean(x[!is.na(x)])), by=Subject]
mdata <- dtdata[, lapply(dtdata[,3:68], mean(x[!is.na(x)])), by=Subject]
mdata <- dtdata[, lapply(dtdata[,3:68], function(x)mean(x[!is.na(x)])), by=Subject]
head(mdata)
mdata <- dtdata[, lapply(dtdata[,3:68], function(x)mean(x[!is.na(x)])), by="Subject,Activity"]
dim(m)
dim(mdata)
mdata <- dtdata[, lapply(.SD, function(x)mean(x[!is.na(x)])), by="Subject,Activity"]
dim(mdata)
head(mdata)
mdata <- dtdata[, lapply(.SD, function(x)mean(x[!is.na(x)])), by=list(Subject,Activity)]
dim(mdata)
DF <- data.frame(X=1:20, Y=sample(c(0,1), 20, TRUE), Z=sample(0:5, 20, TRUE))
DT <- data.table(DF)
DT[, Mean:=mean(X), by=list(Y, Z)]
DT <- data.table(DF)
DT[, Mean:=mean(X), by=list(Y, Z)]
DT
DT2 <- DT[, Mean:=mean(X), by=list(Y, Z)]
DT2
?aggregate
aggregate(cdata[,3], by = list(Subject, Activity), FUN = mean)
colnames(cdata[,1:2])
aggregate(cdata[,3], by = list("Subject","Activity"), FUN = mean)
aggregate(cdata[,3], by = list(Subject,Activit), FUN = mean)
aggregate(cdata[,3], by = c(Subject,Activit), FUN = mean)
aggregate(cdata[,3], by = c("Subject","Activity"), FUN = mean)
aggregate(cdata[,3], by = list("Subject","Activity"), FUN = mean)
aggregate(cdata[,3], by = list(cdata$Subject,cdata$Activity), FUN = mean)
aggregate(cdata[], by = list(cdata$Subject,cdata$Activity), FUN = mean)
temp <- aggregate(cdata[], by = list(cdata$Subject,cdata$Activity), FUN = mean)
dim(temp)
mdata <- dtdata[, lapply(.SD, function(x)mean(x[!is.na(x)])), by=list(dtdata$Subject,dtdata$Activity)]
dim(mdata)
mdata <- dtdata[, lapply(.SD, function(x)mean(x[!is.na(x)])), by=Activity]
dim(mdata)
head(mdata[,1]); tail(mdata[,1])
head(mdata)
dim(dtdata)
head(dtdata[2])
head(dtdata[,2])
dtdata$Activity
cdata$Activity
as$Activity
cdata$Activity <- factor(cdata$Activity, labels)
cdata$Activity
factor(cdata$Activity, labels)
fc <- factor(cdata$Activity, labels)
class(fc)
as.character(fc)
cdata$Activity
lables
labels
x_test<-read.table("test/X_test.txt", header=FALSE,sep="")
x_train<-read.table("train/X_train.txt", header=FALSE,sep="") #sep = "" means any white space (including double spaces)
y_test <- read.csv("test/y_test.txt", sep = " ", header= FALSE)
y_train <- read.csv("train/y_train.txt", sep = " ", header= FALSE)
subject_test <- read.csv("test/subject_test.txt", sep = " ", header= FALSE)
subject_train <- read.csv("train/subject_train.txt", sep = " ", header= FALSE)
features <- read.csv("features.txt", sep = " ", header= FALSE)
activity_labels <- read.csv("activity_labels.txt", sep = " ", header= FALSE)
##2. Column bind Dataframes y_test and subject_test and add column names Activity and Subject to it. ->testas
testas <- cbind(y_test, subject_test)
colnames(testas) <- c("Activity", "Subject")
##3. Column bind Dataframes y_train and subject_train and add column names Activity and Subject to it. ->trainas
trainas <- cbind(y_train, subject_train)
colnames(trainas) <- c("Activity", "Subject")
##4. Merge (rbind) trainas and testas (dim == 10299*2) -> as
as <- rbind(trainas, testas)
head(as)
##5. Merge (rbind) x_train and x_test data (dim == 10299*561) -> x
x <- rbind(x_train, x_test)
##6. Change column names of x from features.txt
colnames(x) <- features[,2]
##7. Eliminate columns from x which do not have "mean()" or "std()" in the column names. -> cdata (dim-10299*66)
toMatch <- c(".*mean\\(\\).*", ".*std\\(\\).*")
matches <- unique (grep(paste(toMatch,collapse="|"), colnames(x), value=TRUE))
cdata <- x[,matches]
## 8. Column bind as and cdata (dim == 10299*68) -> cdata
cdata <- cbind(as, cdata)
## 9. Replace activity numbers with Activity names from activity_lables.txt-> Final Table
labels <- as.vector(activity_labels[,2])
cdata$Activity <- factor(cdata$Activity, labels)
cdata$Activity
cdata <- cbind(as, cdata)
cdata$Activity
factor(cdata$Activity, labels)
labels
factor(cdata$Activity, labels = labels)
cdata$Activity <- factor(cdata$Activity, labels = labels)
cdata$Activity
dtdata <- data.table(cdata, keep.colnames = TRUE)
mdata <- dtdata[, lapply(.SD, function(x)mean(x[!is.na(x)])), by=list(Subject,Activity)]
dim(mdata)
mdata
?write.table
write.table(mdata, "tidyDataSet.csv", sep=",")
head.dtdata
head(dtdata)
dtdata <- data.table(cdata)
dtdata <- data.table(cdata)
head(dtdata)
head(cdata)
library("data.table")
##1. Read files
#These return different number of columns:
#x_test <- read.csv("test/X_test.txt", sep = " ", header= FALSE)
#x_train <- read.csv("train/X_train.txt", sep = " ", header= FALSE)
x_test<-read.table("test/X_test.txt", header=FALSE,sep="")
x_train<-read.table("train/X_train.txt", header=FALSE,sep="") #sep = "" means any white space (including double spaces)
y_test <- read.csv("test/y_test.txt", sep = " ", header= FALSE)
y_train <- read.csv("train/y_train.txt", sep = " ", header= FALSE)
subject_test <- read.csv("test/subject_test.txt", sep = " ", header= FALSE)
subject_train <- read.csv("train/subject_train.txt", sep = " ", header= FALSE)
features <- read.csv("features.txt", sep = " ", header= FALSE)
activity_labels <- read.csv("activity_labels.txt", sep = " ", header= FALSE)
##2. Column bind Dataframes y_test and subject_test and add column names Activity and Subject to it. ->testas
testas <- cbind(y_test, subject_test)
colnames(testas) <- c("Activity", "Subject")
##3. Column bind Dataframes y_train and subject_train and add column names Activity and Subject to it. ->trainas
trainas <- cbind(y_train, subject_train)
colnames(trainas) <- c("Activity", "Subject")
##4. Merge (rbind) trainas and testas (dim == 10299*2) -> as
as <- rbind(trainas, testas)
head(as)
##5. Merge (rbind) x_train and x_test data (dim == 10299*561) -> x
x <- rbind(x_train, x_test)
##6. Change column names of x from features.txt
colnames(x) <- features[,2]
##7. Eliminate columns from x which do not have "mean()" or "std()" in the column names. -> cdata (dim-10299*66)
toMatch <- c(".*mean\\(\\).*", ".*std\\(\\).*")
matches <- unique (grep(paste(toMatch,collapse="|"), colnames(x), value=TRUE))
cdata <- x[,matches]
## 8. Column bind as and cdata (dim == 10299*68) -> cdata
cdata <- cbind(as, cdata)
## 9. Replace activity numbers with Activity names from activity_lables.txt-> Final Table
labels <- as.vector(activity_labels[,2])
cdata$Activity <- factor(cdata$Activity, labels = labels)
## 10. Take mean of observations per activity per subject. (dim == 180*68).
dtdata <- data.table(cdata)
mdata <- dtdata[, lapply(.SD, function(x)mean(x[!is.na(x)])), by=list(Subject,Activity)]
## 11. use write.table to get a text file from the above Data Frame
write.table(mdata, "tidyDataSet.csv", sep=",")
head(mdata)
write.table(mdata, "tidyDataSet.csv", sep=",")
write.table(mdata, "tidyDataSet.txt", sep="\t")
library("data.table")
##1. Read files
#These return different number of columns:
#x_test <- read.csv("test/X_test.txt", sep = " ", header= FALSE)
#x_train <- read.csv("train/X_train.txt", sep = " ", header= FALSE)
x_test<-read.table("test/X_test.txt", header=FALSE,sep="")
x_train<-read.table("train/X_train.txt", header=FALSE,sep="") #sep = "" means any white space (including double spaces)
y_test <- read.csv("test/y_test.txt", sep = " ", header= FALSE)
y_train <- read.csv("train/y_train.txt", sep = " ", header= FALSE)
subject_test <- read.csv("test/subject_test.txt", sep = " ", header= FALSE)
subject_train <- read.csv("train/subject_train.txt", sep = " ", header= FALSE)
features <- read.csv("features.txt", sep = " ", header= FALSE)
activity_labels <- read.csv("activity_labels.txt", sep = " ", header= FALSE)
##2. Column bind Dataframes y_test and subject_test and add column names Activity and Subject to it. ->testas
testas <- cbind(y_test, subject_test)
colnames(testas) <- c("Activity", "Subject")
##3. Column bind Dataframes y_train and subject_train and add column names Activity and Subject to it. ->trainas
trainas <- cbind(y_train, subject_train)
colnames(trainas) <- c("Activity", "Subject")
##4. Merge (rbind) trainas and testas (dim == 10299*2) -> as
as <- rbind(trainas, testas)
head(as)
##5. Merge (rbind) x_train and x_test data (dim == 10299*561) -> x
x <- rbind(x_train, x_test)
##6. Change column names of x from features.txt
colnames(x) <- features[,2]
##7. Eliminate columns from x which do not have "mean()" or "std()" in the column names. -> cdata (dim-10299*66)
toMatch <- c(".*mean\\(\\).*", ".*std\\(\\).*")
matches <- unique (grep(paste(toMatch,collapse="|"), colnames(x), value=TRUE))
xdata <- x[,matches]
## 8. Column bind as and cdata (dim == 10299*68) -> cdata
cdata <- cbind(as, xdata)
## 9. Replace activity numbers with Activity names from activity_lables.txt-> Final Table
labels <- as.vector(activity_labels[,2])
cdata$Activity <- factor(cdata$Activity, labels = labels)
## 10. Take mean of observations per activity per subject. (dim == 180*68).
dtdata <- data.table(cdata)
mdata <- dtdata[, lapply(.SD, function(x)mean(x[!is.na(x)])), by=list(Subject,Activity)]
## 11. use write.table to get a text file from the above Data Frame
write.table(mdata, "tidyDataSet.txt", sep="\t")
library("data.table")
##1. Read files
#These return different number of columns:
#x_test <- read.csv("test/X_test.txt", sep = " ", header= FALSE)
#x_train <- read.csv("train/X_train.txt", sep = " ", header= FALSE)
x_test<-read.table("test/X_test.txt", header=FALSE,sep="")
x_train<-read.table("train/X_train.txt", header=FALSE,sep="") #sep = "" means any white space (including double spaces)
y_test <- read.csv("test/y_test.txt", sep = " ", header= FALSE)
y_train <- read.csv("train/y_train.txt", sep = " ", header= FALSE)
subject_test <- read.csv("test/subject_test.txt", sep = " ", header= FALSE)
subject_train <- read.csv("train/subject_train.txt", sep = " ", header= FALSE)
features <- read.csv("features.txt", sep = " ", header= FALSE)
activity_labels <- read.csv("activity_labels.txt", sep = " ", header= FALSE)
##2. Column bind Dataframes y_test and subject_test and add column names Activity and Subject to it. ->testas
testas <- cbind(y_test, subject_test)
colnames(testas) <- c("Activity", "Subject")
##3. Column bind Dataframes y_train and subject_train and add column names Activity and Subject to it. ->trainas
trainas <- cbind(y_train, subject_train)
colnames(trainas) <- c("Activity", "Subject")
##4. Merge (rbind) trainas and testas (dim == 10299*2) -> as
as <- rbind(trainas, testas)
head(as)
##5. Merge (rbind) x_train and x_test data (dim == 10299*561) -> x
x <- rbind(x_train, x_test)
##6. Change column names of x from features.txt
colnames(x) <- features[,2]
##7. Eliminate columns from x which do not have "mean()" or "std()" in the column names. -> cdata (dim-10299*66)
toMatch <- c(".*mean\\(\\).*", ".*std\\(\\).*")
matches <- unique (grep(paste(toMatch,collapse="|"), colnames(x), value=TRUE))
xdata <- x[,matches]
## 8. Column bind as and cdata (dim == 10299*68) -> cdata
cdata <- cbind(as, xdata)
## 9. Replace activity numbers with Activity names from activity_lables.txt-> Final Table
labels <- as.vector(activity_labels[,2])
cdata$Activity <- factor(cdata$Activity, labels = labels)
## 10. Take mean of observations per activity per subject. (dim == 180*68).
dtdata <- data.table(cdata)
mdata <- dtdata[, lapply(.SD, function(x)mean(x[!is.na(x)])), by=list(Subject,Activity)]
## 11. use write.table to get a text file from the above Data Frame
write.table(mdata, "tidyDataSet.txt", sep="\t")
head(mdata)
write.csv(mdata, "tidyDataSet.txt", sep="\t")
write.csv(mdata, "tidyDataSet.txt", sep=" ")
write.table(mdata, "tidyDataSet.txt", sep=" ")
write.table(mdata, "tidyDataSet.txt", sep=" ", row.names = "False")
write.table(mdata, "tidyDataSet.txt", sep=" ", row.names = "FALSE")
write.table(mdata, "tidyDataSet.txt", sep=" ", row.names = FALSE)
pdata<-read.table("tidyDataSet.txt", sep="")
head(pdata)
pdata<-read.table("tidyDataSet.txt", sep="", header = TRUE)
head(pdata)
pdata<-read.table("tidyDataSet.txt", sep="", header = TRUE)
#head(pdata)
colnames(pdata)
pdata<-read.table("tidyDataSet.txt", sep="", header = TRUE)
#head(pdata)
vars <- colnames(pdata)
dtype <- rep("Continous", len(vars))
dtype[1] <- "ordinal"
dtype[2] <- "categorical"
colnames <- c("variable", "data type")
varstable <- data.frame(vars,dtype)
varstable
dtype <- rep("Continous", length(vars))
ars <- colnames(pdata)
dtype <- rep("Continous", length(vars))
dtype[1] <- "ordinal"
dtype[2] <- "categorical"
colnames <- c("variable", "data type")
varstable <- data.frame(vars,dtype)
varstable
kable(varstable, format = "markdown")
library(knitr)
pdata<-read.table("tidyDataSet.txt", sep="", header = TRUE)
#head(pdata)
vars <- colnames(pdata)
dtype <- rep("Continous", length(vars))
dtype[1] <- "ordinal"
dtype[2] <- "categorical"
colnames <- c("variable", "data type")
varstable <- data.frame(vars,dtype)
kable(varstable, format = "markdown")
library(knitr)
